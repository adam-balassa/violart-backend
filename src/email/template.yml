AWSTemplateFormatVersion: 2010-09-09
Description: AWS CFN template for ViolArtStudio Backend

Transform: AWS::Serverless-2016-10-31

Parameters: 
  Environment: 
    Description: The name of the deployment environment 
    Type: String
    Default: dev

Resources:
  SendEmail:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub send_email-${Environment}
      Description: Lambda function that sends an email
      Role: !GetAtt SendEmailRole.Arn
      Runtime: nodejs12.x
      Handler: send_email.handler
      CodeUri: dist/email/send_email.js
    Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Application
        Value: Violart

  SendEmailLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/aws/lambda/${SendEmail}"

  SendEmailRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      RoleName: !Sub send-email-role-${Environment}
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: Violart

  SendEmailPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub send-email-policy-${Environment}
      Roles: [!Ref SendEmailRole]
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !GetAtt SendEmailLogs.Arn
          - Effect: Allow
            Action: ses:SendEmail
            Resource: !Sub arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*

  GenerateEmailBody:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub generate_violart_email_body-${Environment}
      Description: Lambda function that generates an email body
      Role: !GetAtt GenerateEmailRole.Arn
      Runtime: nodejs12.x
      Handler: generate_email.handler
      CodeUri: dist/email/generate_email.js
    Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Application
        Value: Violart

  GenerateEmailLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/aws/lambda/${GenerateEmailBody}"

  GenerateEmailRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      RoleName: !Sub generate-email-role-${Environment}
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: Violart

  GenerateEmailPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub generate-email-policy-${Environment}
      Roles: [!Ref GenerateEmailRole]
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !GetAtt GenerateEmailLogs.Arn

  GenerateEmailSubject:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub generate_violart_email_subject-${Environment}
      Description: Lambda function that generates an email subject
      Role: !GetAtt GenerateSubjectRole.Arn
      Runtime: nodejs12.x
      Handler: generate_subject.handler
      CodeUri: dist/generate_subject.js
    Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Application
        Value: Violart

  GenerateSubjectLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/aws/lambda/${GenerateEmailSubject}"

  GenerateSubjectRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      RoleName: !Sub generate-subject-role-${Environment}
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: Violart

  GenerateSubjectPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub generate-subject-policy-${Environment}
      Roles: [!Ref GenerateSubjectRole]
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !GetAtt GenerateSubjectLogs.Arn

  SendFullEmail:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub SendFullEmail-${Environment}
      DefinitionUri: src/email/send_email_state_machine.json
      DefinitionSubstitutions: 
        SendEmail : !GetAtt SendEmail.Arn
        GenerateEmailSubject : !GetAtt GenerateEmailSubject.Arn
        GenerateEmailBody : !GetAtt GenerateEmailBody.Arn
      Logging: 
        Destinations: 
        - CloudWatchLogsLogGroup: 
            LogGroupArn: !GetAtt SendFullEmailLogs.Arn
        IncludeExecutionData: true
        Level: ALL
      Role: !GetAtt SendFullEmailRole.Arn
      Type: STANDARD
    Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Application
        Value: Violart

  SendFullEmailLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/aws/stepfunctions/SendFullEmail-${Environment}"
  
  SendFullEmailRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      RoleName: !Sub send-full-email-role-${Environment}
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - states.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:                 
              - logs:CreateLogDelivery
              - logs:GetLogDelivery
              - logs:UpdateLogDelivery
              - logs:DeleteLogDelivery
              - logs:ListLogDeliveries
              - logs:PutResourcePolicy
              - logs:DescribeResourcePolicies
              - logs:DescribeLogGroups
              Resource: "*"
        PolicyName: SendFullEmailLogsFullAccess
      - PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: lambda:InvokeFunction
              Resource: 
              - !GetAtt SendEmail.Arn
              - !GetAtt GenerateEmailBody.Arn
              - !GetAtt GenerateEmailSubject.Arn
        PolicyName: SendFullEmailCallLambdas
      Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Application
        Value: Violart

Outputs:
  SendEmail:
    Description: The Email sender statemachine
    Value: !Ref SendFullEmail
